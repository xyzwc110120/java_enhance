package com.cyx.java_enhance.jdbc.returnPK;

import com.cyx.java_enhance.jdbc.daoDemo.util.JDBCUtil;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 * 获取表中添加数据时自动生成的主键
 */
public class ReturnPKTest {

    @Test
    @DisplayName("使用 Statement 对象获取自动生成的主键")
    void getAutoGeneratedPKByStatement() {
        String sql = "INSERT INTO batch_test (`value`) VALUES (1)";
        Connection connection = null;
        Statement statement = null;
        ResultSet set = null;

        try {
            connection = JDBCUtil.getConnection();
            assert connection != null;
            statement = connection.createStatement();
            // 执行给定的 SQL 语句，并用给定标志通知驱动程序由此 Statement 生成的自动生成键是否可用于获取。
            statement.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
            // 获取自动生成的主键
            set = statement.getGeneratedKeys();
            if (set.next()) {
                System.out.println("ID = " + set.getLong(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            JDBCUtil.close(connection, statement, set);
        }
    }

    @Test
    @DisplayName("使用 PreparedStatement 对象获取自动生成的主键")
    void getAutoGeneratedPKByPreparedStatement() {
        String sql = "INSERT INTO batch_test (`value`) VALUES (?)";
        Connection connection = null;
        PreparedStatement statement = null;
        ResultSet set = null;

        try {
            connection = JDBCUtil.getConnection();
            assert connection != null;
            // 这里是在传入 SQL 时设置获取自动生成主键的标志
            statement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            statement.setInt(1, 2);
            statement.executeUpdate();
            set = statement.getGeneratedKeys();
            if (set.next()) {
                System.out.println("ID = " + set.getLong(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            JDBCUtil.close(connection, statement, set);
        }
    }

}